=================
if
package
else
import
(
)
true
false
[
]
new
=
{
}
;
characterLiteral
numberLiteral
null
stringLiteral
for
*
.
/
%
+
-
<
>
==
!=
&&
||
<=
>=
instanceof
void
identifier
public
protected
private
static
abstract
final
native
return
================

TypeDeclaration
ArrayAccess
Expression
ArrayCreation
PrimitiveType
Assignment
Block
ArrayType
Type
Statements
Statement
BodyDeclaration
ClassDeclaration
InterfaceDeclaration
MethodDeclaration
ConstructorDeclaration
FieldDeclaration
Initializer
CastExpression
ClassInstanceCreation
ArgumentsList
CompilationUnit
PackageDeclaration
ImportDeclaration
ImportDeclarations
TypeDeclaration
TypeDeclarations
EmptyStatement
ConditionalExpression
FieldAccess,
InfixExpression
InstanceofExpression
MethodInvocation
Name
ParenthesizedExpression
VariableDeclarationExpression 
ExpressionStatement
StatementExpression
ForStatement
IfStatement
InfixOperator
Modifier
Modifiers
=================



=================
ArrayAccess Expression [ Expression ]
ArrayCreation new Type [ Expression ]
Assignment Expression = Expression
ArrayType identifier [ ]
Statements Statements Statement
Block { Statements }
Statements Statement
Block { }
BooleanLiteral true
BooleanLiteral false
CastExpression ( Type ) Expression
ClassInstanceCreation new Name ( ArgumentsList )
ArgumentsList
ArgumentsList Expression
ArgumentsList ArgumentsList , Expression
CompilationUnit PackageDeclaration ImportDeclarations TypeDeclarations
CompilationUnit PackageDeclaration ImportDeclarations
CompilationUnit PackageDeclaration TypeDeclarations
CompilationUnit ImportDeclarations TypeDeclarations
CompilationUnit PackageDeclaration
CompilationUnit ImportDeclarations
CompilationUnit TypeDeclarations
CompilationUnit
ImportDeclarations ImportDeclaration
ImportDeclarations ImportDeclarations ImportDeclaration
TypeDeclarations TypeDeclaration
TypeDeclarations ;
TypeDeclarations TypeDeclarations TypeDeclaration
TypeDeclarations TypeDeclarations ;
EmptyStatement ;
Expression ArrayAccess
Expression ArrayCreation
Expression Assignment
Expression booleanLiteral
Expression CastExpression
Expression characterLiteral
Expression ClassInstanceCreation
Expression FieldAccess
Expression InfixExpression
Expression InstanceofExpression
Expression MethodInvocation
Expression Name
Expression null
Expression numberLiteral
Expression ParenthesizedExpression
Expression stringLiteral
Expression VariableDeclarationExpression
ExpressionStatement StatementExpression ;
FieldAccess Expression . identifier
ForStatement for ( ; ; ) Statement
ForStatement for ( Expression ; ; ) Statement
ForStatement for ( Expression ; Expression ; ) Statement
ForStatement for ( Expression ; Expression ; Expression ) Statement
ForStatement for ( Expression ; ; Expression ) Statement
ForStatement for ( ; Expression ; Expression ) Statement
ForStatement for ( ; Expression ; ) Statement
ForStatement for ( ; ; Expression ) Statement
IfStatement if ( Expression ) Statement 
IfStatement if ( Expression ) Statement else Statement
ImportDeclaration import Name 
ImportDeclaration import Name . *
InfixExpression Expression InfixOperator Expression
InfixOperator *
InfixOperator +
InfixOperator -
InfixOperator /
InfixOperator %
InfixOperator <
InfixOperator >
InfixOperator ==
InfixOperator !=
InfixOperator <=
InfixOperator >=
InfixOperator &&
InfixOperator ||
Modifiers Modifiers Modifier
Modifiers Modifier
InstanceofExpression Expression instanceof Type
MethodDeclaration Modifiers Type identifier ( ParameterDefs ) Block
MethodDeclaration Type identifier ( ParameterDefs ) Block
MethodDeclaration Modifiers Type identifier ( ParameterDefs ) ;
MethodDeclaration Type identifier ( ParameterDefs ) ;
ConstructorDeclaration Modifiers identifier ( ParameterDefs ) Block
ConstructorDeclaration Modifiers identifier ( ) Block
ConstructorDeclaration identifier ( ParameterDefs ) Block
ConstructorDeclaration identifier ( ) Block
ParameterDefs ParameterDefs , ParameterDef
ParameterDefs ParameterDef
ParameterDef Type identifier
ParameterDef final Type identifier
MethodInvocation identifier ( )
MethodInvocation identifier ( Parameters )
MethodInvocation Expression . identifier ( )
MethodInvocation Expression . identifier ( Parameter )
Parameters Parameters , Expression
Parameters Expression
Modifier public
Modifier protected
Modifier private
Modifier static
Modifier abstract
Modifier final
Modifier native
Name QualifiedName
Name SimpleName
PackageDeclaration package Name ;
ParenthesizedExpression ( Expression )
PrimitiveType byte
PrimitiveType short
PrimitiveType char
PrimitiveType int
PrimitiveType void
QualifiedName Name . SimpleName
ReturnStatement return ;
ReturnStatement return Expression ;
SingleVariableDeclaration Modifiers Type identifier = Expression
SingleVariableDeclaration Type identifier = Expression
SingleVariableDeclaration Modifiers Type identifier
SingleVariableDeclaration Type identifier
Statement Block
Statement EmptyStatement
Statement ExpressionStatement
Statement ForStatement
Statement IfStatement
Statement ReturnStatement
Statement WhileStatement
Type PrimitiveType
Type ArrayType
Type identifier
TypeDeclaration ClassDeclaration
TypeDeclaration InterfaceDeclaration
ClassDeclaration Modifiers class identifier extends Type implements Interfaces ClassBodyDeclaration
ClassDeclaration Modifiers class identifier implements Interfaces ClassBodyDeclaration
ClassDeclaration Modifiers class identifier extends Type ClassBodyDeclaration
ClassDeclaration Modifiers class identifier ClassBodyDeclaration
ClassDeclaration class identifier extends Type implements Interfaces ClassBodyDeclaration
ClassDeclaration class Type implements Interfaces ClassBodyDeclaration
ClassDeclaration class identifier extends Type ClassBodyDeclaration
ClassDeclaration class identifier ClassBodyDeclaration
ClassDeclaration Modifiers class identifier extends Type implements Interfaces ;
ClassDeclaration Modifiers class identifier implements Interfaces ;
ClassDeclaration Modifiers class identifier extends Type ;
ClassDeclaration Modifiers class identifier ;
ClassDeclaration class identifier extends Type implements Interfaces ;
ClassDeclaration class Type implements Interfaces ;
ClassDeclaration class identifier extends Type ;
ClassDeclaration class identifier ;
Interfaces Interfaces , Type
Interfaces Type
InterfaceDeclaration Modifiers interface identifier extends Interfaces InterfaceBodyDeclaration
InterfaceDeclaration Modifiers interface identifier InterfaceBodyDeclaration
InterfaceDeclaration interface identifier extends Interfaces InterfaceBodyDeclaration
InterfaceDeclaration interface identifier InterfaceBodyDeclaration
InterfaceDeclaration Modifiers interface identifier extends Interfaces ;
InterfaceDeclaration Modifiers interface identifier ;
InterfaceDeclaration interface identifier extends Interfaces ;
InterfaceDeclaration interface identifier ;
=================
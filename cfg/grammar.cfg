62
boolean
byte
short
int
long
char
float
double
identifier
[
]
.
endToken
package
;
import
*
static
class
public
protected
private
abstract
final
extends
implements
,
{
}
=
(
)
void
this
super
enum
interface
if
else
while
for

return
new
-
~
!
/
%
+
<
>
<=
>=
instanceof
==
!=
&
^
|
&&
||
151
Type
PrimitiveType
ReferenceType
NumericType
IntegralType
FloatingPointType
ClassOrInterfaceType
ArrayType
ClassType
InterfaceType
TypeDeclSpecifier
Name
SimpleName
QualifiedName
S
CompilationUnit
PackageDeclarations
ImportDeclarations
TypeDeclarations
PackageDeclaration
ImportDeclaration
TypeDeclaration
Annotations
SingleTypeImportDeclaration
TypeImportOnDemandDeclaration
ClassDeclaration
InterfaceDeclaration
NormalClassDeclaration
EnumDeclaration
ClassModifiers
TypeParameters
Super
Interfaces
ClassBody
ClassModifier
TypeArguments
InterfaceTypeList
ClassBodyDeclarations
ClassBodyDeclaration
ClassMemberDeclaration
StaticInitializer
ConstructorDeclaration
FieldDeclaration
MethodDeclaration
FieldModifiers
VariableDeclarators
VariableDeclarator
VariableDeclaratorId
VariableInitializer
Expression
ArrayInitializer
FieldModifier
MethodHeader
MethodBody
MethodModifiers
Result
MethodDeclarator
FormalParameterList
FormalParameters
FormalParameter
VariableModifiers
VariableModifier
MethodModifier
Block
ConstructorModifiers
ConstructorDeclarator
ConstructorBody
ConstructorModifier
ExplicitConstructorInvocation
BlockStatements
ArgumentList
Primary
EnumBody
EnumConstants
EnumBodyDeclarations
EnumConstant
Arguments
NormalInterfaceDeclaration
AnnotationTypeDeclaration
InterfaceModifiers
ExtendsInterfaces
InterfaceBody
InterfaceModifier
InterfaceMemberDeclarations
InterfaceMemberDeclaration
ConstantDeclaration
AbstractMethodDeclaration
ConstantModifiers
ConstantModifier
ConstantModifers
AbstractMethodModifiers
AbstractMethodModifier
BlockStatement
LocalVariableDeclarationStatement
Statement
LocalVariableDeclaration
StatementWithoutTrailingSubstatement
IfThenStatement
IfThenElseStatement
WhileStatement
ForStatement
EmptyStatement
ExpressionStatement
AssertStatement
ReturnStatement
StatementNoShortIf
IfThenElseStatementNoShortIf
WhileStatementNoShortIf
ForStatementNoShortIf
StatementExpression
Assignment
MethodInvocation
ClassInstanceCreationExpression
BasicForStatement
ForInit
ForUpdate
PrimaryNoNewArray
ArrayCreationExpression
Literal
FieldAccess
PrimaryNoNewArrayMethodInvocation
ArrayAccess
IntegerLiteral
FloatingPointLiteral
BooleanLiteral
CharacterLiteral
StringLiteral
NullLiteral
DimExprs
Dims
DimExpr
Dims[]
UnaryExpression
UnaryExpressionNotPlusMinus
PostfixExpression
CastExpression
MultiplicativeExpression
AdditiveExpression
RelationalExpression
ShiftExpression
EqualityExpression
AndExpression
ExclusiveOrExpression
InclusiveOrExpression
ConditionalAndExpression
ConditionalOrExpression
AssignmentExpression
ConditionalExpression
LeftHandSide
AssignmentOperator
ConstantExpression
S
354
Type PrimitiveType
Type ReferenceType
PrimitiveType NumericType
PrimitiveType boolean
NumericType IntegralType
NumericType FloatingPointType
IntegralType byte
IntegralType short
IntegralType int
IntegralType long
IntegralType char
FloatingPointType float
FloatingPointType double
ReferenceType ClassOrInterfaceType
ReferenceType ArrayType
ClassOrInterfaceType ClassType
ClassOrInterfaceType InterfaceType
ClassType TypeDeclSpecifier
InterfaceType TypeDeclSpecifier
TypeDeclSpecifier Name
ArrayType Type [ ]
Name SimpleName
Name QualifiedName
SimpleName identifier
QualifiedName Name . SimpleName
S CompilationUnit endToken
CompilationUnit PackageDeclarations ImportDeclarations TypeDeclarations
CompilationUnit PackageDeclaration ImportDeclarations
CompilationUnit PackageDeclaration TypeDeclarations
CompilationUnit ImportDeclarations TypeDeclarations
CompilationUnit PackageDeclaration
CompilationUnit ImportDeclarations
CompilationUnit TypeDeclarations
ImportDeclarations ImportDeclaration
ImportDeclarations ImportDeclarations ImportDeclaration
TypeDeclarations TypeDeclaration
TypeDeclarations TypeDeclarations TypeDeclaration
PackageDeclaration Annotations package Name ;
PackageDeclaration package Name ;
ImportDeclaration SingleTypeImportDeclaration
ImportDeclaration TypeImportOnDemandDeclaration
SingleTypeImportDeclaration import Name ;
TypeImportOnDemandDeclaration import Name . * ;
TypeDeclaration ClassDeclaration
TypeDeclaration InterfaceDeclaration
TypeDeclaration ;
ClassDeclaration NormalClassDeclaration
ClassDeclaration EnumDeclaration
NormalClassDeclaration ClassModifiers class identifier TypeParameters Super Interfaces ClassBody
NormalClassDeclaration class identifier ClassBody
NormalClassDeclaration class identifier Interfaces ClassBody
NormalClassDeclaration class identifier Super ClassBody
NormalClassDeclaration class identifier Super Interfaces ClassBody
NormalClassDeclaration class identifier TypeParameters ClassBody
NormalClassDeclaration class identifier TypeParameters Interfaces ClassBody
NormalClassDeclaration class identifier TypeParameters Super ClassBody
NormalClassDeclaration class identifier TypeParameters Super Interfaces ClassBody
NormalClassDeclaration ClassModifiers class identifier ClassBody
NormalClassDeclaration ClassModifiers class identifier Interfaces ClassBody
NormalClassDeclaration ClassModifiers class identifier Super ClassBody
NormalClassDeclaration ClassModifiers class identifier Super Interfaces ClassBody
NormalClassDeclaration ClassModifiers class identifier TypeParameters ClassBody
NormalClassDeclaration ClassModifiers class identifier TypeParameters Interfaces ClassBody
NormalClassDeclaration ClassModifiers class identifier TypeParameters Super ClassBody
ClassModifiers ClassModifier
ClassModifiers ClassModifiers ClassModifier
ClassModifier public
ClassModifier protected
ClassModifier private
ClassModifier abstract
ClassModifier static
ClassModifier final
Super extends ClassType
ClassType TypeDeclSpecifier TypeArguments
Interfaces implements InterfaceTypeList
InterfaceTypeList InterfaceType
InterfaceTypeList InterfaceTypeList , InterfaceType
ClassBody { ClassBodyDeclarations }
ClassBody { }
ClassBodyDeclarations ClassBodyDeclaration
ClassBodyDeclarations ClassBodyDeclarations ClassBodyDeclaration
ClassBodyDeclaration ClassMemberDeclaration
ClassBodyDeclaration StaticInitializer
ClassBodyDeclaration ConstructorDeclaration
ClassMemberDeclaration FieldDeclaration
ClassMemberDeclaration MethodDeclaration
ClassMemberDeclaration ClassDeclaration
ClassMemberDeclaration InterfaceDeclaration
ClassMemberDeclaration ;
FieldDeclaration FieldModifiers Type VariableDeclarators ;
FieldDeclaration Type VariableDeclarators ;
VariableDeclarators VariableDeclarator
VariableDeclarators VariableDeclarators , VariableDeclarator
VariableDeclarator VariableDeclaratorId
VariableDeclarator VariableDeclaratorId = VariableInitializer
VariableDeclaratorId identifier
VariableDeclaratorId VariableDeclaratorId [ ]
VariableInitializer Expression
VariableInitializer ArrayInitializer
FieldModifiers FieldModifier
FieldModifiers FieldModifiers FieldModifier
FieldModifier public
FieldModifier protected
FieldModifier private
FieldModifier static
FieldModifier final
MethodDeclaration MethodHeader MethodBody
MethodHeader MethodModifiers TypeParameters Result MethodDeclarator
MethodHeader TypeParameters Result MethodDeclarator
MethodHeader MethodModifiers Result MethodDeclarator
MethodHeader Result MethodDeclarator
MethodDeclarator identifier ( FormalParameterList )
MethodDeclarator identifier ( )
MethodDeclarator MethodDeclarator [ ]
FormalParameters FormalParameter
FormalParameters FormalParameters , FormalParameter
FormalParameter VariableModifiers Type VariableDeclaratorId
FormalParameter Type VariableDeclaratorId
VariableModifiers VariableModifier
VariableModifiers VariableModifiers VariableModifier
VariableModifier final
MethodModifiers MethodModifier
MethodModifiers MethodModifiers MethodModifier
MethodModifier public
MethodModifier protected
MethodModifier private
MethodModifier abstract
MethodModifier static
MethodModifier final
Result Type
Result void
MethodBody Block
MethodBody ;
ConstructorDeclaration ConstructorModifiers ConstructorDeclarator ConstructorBody
ConstructorDeclaration ConstructorDeclarator ConstructorBody
ConstructorDeclarator TypeParameters Name ( FormalParameterList )
ConstructorDeclarator Name ( FormalParameterList )
ConstructorDeclarator TypeParameters Name ( )
ConstructorDeclarator Name ( )
ConstructorModifiers ConstructorModifier
ConstructorModifiers ConstructorModifiers ConstructorModifier
ConstructorModifier public
ConstructorModifier protected
ConstructorModifier private
ConstructorBody { ExplicitConstructorInvocation BlockStatements }
ConstructorBody { BlockStatements }
ConstructorBody { ExplicitConstructorInvocation }
ConstructorBody { }
ExplicitConstructorInvocation this ( ArgumentList ) ;
ExplicitConstructorInvocation this ( ) ;
ExplicitConstructorInvocation super ( ArgumentList ) ;
ExplicitConstructorInvocation super ( ) ;
ExplicitConstructorInvocation Primary . super ( ArgumentList ) ;
ExplicitConstructorInvocation Primary . super ( ) ;
EnumDeclaration ClassModifiers enum identifier Interfaces EnumBody
EnumDeclaration enum identifier Interfaces EnumBody
EnumDeclaration ClassModifiers enum identifier EnumBody
EnumDeclaration enum identifier EnumBody
EnumBody { EnumConstants , EnumBodyDeclarations }
EnumBody { EnumBodyDeclarations }
EnumBody { EnumConstants }
EnumBody { }
EnumConstants EnumConstant
EnumConstants EnumConstants , EnumConstant
EnumConstant identifier Arguments ClassBody
EnumConstant identifier ClassBody
EnumConstant identifier Arguments
EnumConstant identifier
Arguments ( ArgumentList )
Arguments ( )
EnumBodyDeclarations ; ClassBodyDeclarations
EnumBodyDeclarations ;
InterfaceDeclaration NormalInterfaceDeclaration
InterfaceDeclaration AnnotationTypeDeclaration
NormalInterfaceDeclaration InterfaceModifiers interface identifier
NormalInterfaceDeclaration interface identifier
NormalInterfaceDeclaration TypeParameters ExtendsInterfaces InterfaceBody
NormalInterfaceDeclaration ExtendsInterfaces InterfaceBody
NormalInterfaceDeclaration TypeParameters InterfaceBody
NormalInterfaceDeclaration InterfaceBody
InterfaceModifiers InterfaceModifier
InterfaceModifiers InterfaceModifiers InterfaceModifier
InterfaceModifier public
InterfaceModifier protected
InterfaceModifier private
InterfaceModifier abstract
InterfaceModifier static
InterfaceType TypeDeclSpecifier TypeArguments
InterfaceType TypeDeclSpecifier
InterfaceBody { InterfaceMemberDeclarations }
InterfaceBody { }
InterfaceMemberDeclarations InterfaceMemberDeclaration
InterfaceMemberDeclarations InterfaceMemberDeclarations InterfaceMemberDeclaration
InterfaceMemberDeclaration ConstantDeclaration
InterfaceMemberDeclaration AbstractMethodDeclaration
InterfaceMemberDeclaration ClassDeclaration
InterfaceMemberDeclaration InterfaceDeclaration
InterfaceMemberDeclaration ;
ConstantDeclaration ConstantModifiers Type VariableDeclarators ;
ConstantDeclaration Type VariableDeclarators ;
ConstantModifiers ConstantModifier
ConstantModifiers ConstantModifier ConstantModifers
ConstantModifier public
AbstractMethodDeclaration AbstractMethodModifiers TypeParameters Result MethodDeclarator ;
AbstractMethodDeclaration TypeParameters Result MethodDeclarator ;
AbstractMethodDeclaration AbstractMethodModifiers Result MethodDeclarator ;
AbstractMethodDeclaration Result MethodDeclarator ;
AbstractMethodModifiers AbstractMethodModifier
AbstractMethodModifiers AbstractMethodModifiers AbstractMethodModifier
AbstractMethodModifier public
AbstractMethodModifier abstract
Block { BlockStatements }
Block { }
BlockStatements BlockStatement
BlockStatements BlockStatements BlockStatement
BlockStatement LocalVariableDeclarationStatement
BlockStatement ClassDeclaration
BlockStatement Statement
LocalVariableDeclarationStatement LocalVariableDeclaration ;
LocalVariableDeclaration VariableModifiers Type VariableDeclarators
LocalVariableDeclaration Type VariableDeclarators
Statement StatementWithoutTrailingSubstatement
Statement IfThenStatement
Statement IfThenElseStatement
Statement WhileStatement
Statement ForStatement
StatementWithoutTrailingSubstatement Block
StatementWithoutTrailingSubstatement EmptyStatement
StatementWithoutTrailingSubstatement ExpressionStatement
StatementWithoutTrailingSubstatement AssertStatement
StatementWithoutTrailingSubstatement ReturnStatement
StatementNoShortIf StatementWithoutTrailingSubstatement
StatementNoShortIf IfThenElseStatementNoShortIf
StatementNoShortIf WhileStatementNoShortIf
StatementNoShortIf ForStatementNoShortIf
IfThenStatement if ( Expression ) Statement
IfThenElseStatement if ( Expression ) StatementNoShortIf else Statement
IfThenElseStatementNoShortIf if ( Expression ) StatementNoShortIf else StatementNoShortIf
EmptyStatement ;
ExpressionStatement StatementExpression ;
StatementExpression Assignment
StatementExpression MethodInvocation
StatementExpression ClassInstanceCreationExpression
WhileStatement while ( Expression ) Statement
WhileStatementNoShortIf while ( Expression ) StatementNoShortIf
BasicForStatement for ( ForInit ; Expression ; ForUpdate ) Statement
BasicForStatement for (  ; Expression ; ForUpdate ) Statement
BasicForStatement for ( ForInit ;  ; ForUpdate ) Statement
BasicForStatement for ( ForInit ; Expression ;  ) Statement
BasicForStatement for ( ; ; ForUpdate ) Statement
BasicForStatement for ( ForInit ; ; ) Statement
BasicForStatement for ( ; Expression ; ) Statement
BasicForStatement for ( ; ; ) Statement
ForStatementNoShortIf for ( ForInit ; Expression ; ForUpdate ) StatementNoShortIf
ForStatementNoShortIf for (  ; Expression ; ForUpdate ) StatementNoShortIf
ForStatementNoShortIf for ( ForInit ;  ; ForUpdate ) StatementNoShortIf
ForStatementNoShortIf for ( ForInit ; Expression ;  ) StatementNoShortIf
ForStatementNoShortIf for ( ; ; ForUpdate ) StatementNoShortIf
ForStatementNoShortIf for ( ForInit ; ; ) StatementNoShortIf
ForStatementNoShortIf for ( ; Expression ; ) StatementNoShortIf
ForStatementNoShortIf for ( ; ; ) StatementNoShortIf
ReturnStatement return Expression ;
ReturnStatement return ;
Primary PrimaryNoNewArray
Primary ArrayCreationExpression
PrimaryNoNewArray Literal
PrimaryNoNewArray Type . class
PrimaryNoNewArray void . class
PrimaryNoNewArray ( Expression )
PrimaryNoNewArray ClassInstanceCreationExpression
PrimaryNoNewArray FieldAccess
PrimaryNoNewArrayMethodInvocation
PrimaryNoNewArray ArrayAccess
Literal IntegerLiteral
Literal FloatingPointLiteral
Literal BooleanLiteral
Literal CharacterLiteral
Literal StringLiteral
Literal NullLiteral
ClassInstanceCreationExpression new TypeDeclSpecifier ( ArgumentList ) ClassBody
ClassInstanceCreationExpression new TypeDeclSpecifier ( ) ClassBody
ClassInstanceCreationExpression new TypeDeclSpecifier ( ArgumentList )
ClassInstanceCreationExpression new TypeDeclSpecifier ( )
ClassInstanceCreationExpression Primary . new identifier ( ArgumentList ) ClassBody
ClassInstanceCreationExpression Primary . new identifier ( ) ClassBody
ClassInstanceCreationExpression Primary . new identifier ( ArgumentList )
ClassInstanceCreationExpression Primary . new identifier ( )
ArgumentList Expression
ArgumentList ArgumentList , Expression
ArrayCreationExpression new PrimitiveType DimExprs Dims
ArrayCreationExpression new PrimitiveType DimExprs
ArrayCreationExpression new ClassOrInterfaceType DimExprs Dims
ArrayCreationExpression new ClassOrInterfaceType DimExprs
ArrayCreationExpression new PrimitiveType Dims ArrayInitializer
ArrayCreationExpression new ClassOrInterfaceType Dims ArrayInitializer
DimExprs DimExpr
DimExprs DimExprs DimExpr
DimExpr [ Expression ]
Dims[]
FieldAccess Primary . identifier
FieldAccess super . identifier
MethodInvocation Name ( ArgumentList )
MethodInvocation Name ( )
MethodInvocation Primary . identifier ( ArgumentList )
MethodInvocation Primary . identifier ( )
MethodInvocation super . identifier ( ArgumentList )
MethodInvocation super . identifier ( )
MethodInvocation Name . identifier ( ArgumentList )
MethodInvocation Name . identifier ( )
ArgumentList Expression
ArgumentList ArgumentList , Expression
ArrayAccess Expression [ Expression ]
ArrayAccess PrimaryNoNewArray [ Expression ]
UnaryExpression - UnaryExpression
UnaryExpression UnaryExpressionNotPlusMinus
UnaryExpressionNotPlusMinus PostfixExpression
UnaryExpressionNotPlusMinus ~ UnaryExpression
UnaryExpressionNotPlusMinus ! UnaryExpression
UnaryExpressionNotPlusMinus CastExpression
CastExpression ( PrimitiveType ) UnaryExpression
CastExpression ( ReferenceType ) UnaryExpressionNotPlusMinus
MultiplicativeExpression UnaryExpression
MultiplicativeExpression MultiplicativeExpression * UnaryExpression
MultiplicativeExpression MultiplicativeExpression / UnaryExpression
MultiplicativeExpression MultiplicativeExpression % UnaryExpression
AdditiveExpression MultiplicativeExpression
AdditiveExpression AdditiveExpression + MultiplicativeExpression
AdditiveExpression AdditiveExpression - MultiplicativeExpression
RelationalExpression RelationalExpression < ShiftExpression
RelationalExpression RelationalExpression > ShiftExpression
RelationalExpression RelationalExpression <= ShiftExpression
RelationalExpression RelationalExpression >= ShiftExpression
RelationalExpression RelationalExpression instanceof ReferenceType
EqualityExpression RelationalExpression
EqualityExpression EqualityExpression == RelationalExpression
EqualityExpression EqualityExpression != RelationalExpression
AndExpression EqualityExpression
AndExpression AndExpression & EqualityExpression
ExclusiveOrExpression AndExpression
ExclusiveOrExpression ExclusiveOrExpression ^ AndExpression
InclusiveOrExpression ExclusiveOrExpression
InclusiveOrExpression InclusiveOrExpression | ExclusiveOrExpression
ConditionalAndExpression InclusiveOrExpression
ConditionalAndExpression ConditionalAndExpression && InclusiveOrExpression
ConditionalOrExpression ConditionalAndExpression
ConditionalOrExpression ConditionalOrExpression || ConditionalAndExpression
AssignmentExpression ConditionalExpression
AssignmentExpression Assignment
Assignment LeftHandSide AssignmentOperator AssignmentExpression
LeftHandSide Expression
LeftHandSide FieldAccess
LeftHandSide ArrayAccess
AssignmentOperator =
Expression AssignmentExpression
ConstantExpression Expression
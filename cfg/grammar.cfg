60
^
|
&
this
boolean
!
while
interface
implements
extends
class
int
char
short
byte
,
EOF
if
package
else
import
(
)
booleanLiteral
[
]
new
=
{
}
;
characterLiteral
integerLiteral
null
stringLiteral
for
*
.
/
%
+
-
<
>
==
!=
&&
||
<=
>=
instanceof
void
identifier
public
protected
static
abstract
final
native
return
96
FieldDeclaration
AnyArguments
AnyImport
ForInc
ForCond
AnyParameterDefs
AnyInterfaceBody
OptInterfaceParent
OptInterfaces
OptClassParent
AnyClassBody
AnyModifiers
FielSdDeclaration
BitAndExpression
BitXorExpression
BitOrExpression
ForInit
PrimitiveCast
NonPrimCast
CastExpression
UnaryExpressionNotPlusMinus
ClassOrInterfaceType
RefType
ArrayType
PostFixExpression
UnaryExpression
StatementWithoutTrailingSubstatement
WhileStatementNoShortIf
ForStatementNoShortIf
IfThenElseStatementNoShortIf
StatementNoShortIf
IfThenElseStatement
IfThenStatement
ForHeader
Literal
AssignmentExpression
EqualityExpression
RelationalExpression
PrimaryNoNewArray
Primary
CondOrExpression
CondAndExpression
MultiplicativeExpression
AdditiveExpression
LeftHandSide
InterfaceBodyDeclarations
ClassBodyDeclaration
ClassBodyDeclarations
Interfaces
WhileStatement
ReturnStatement
QualifiedName
SimpleName
ParameterDefs
Parameters
Parameter
ParameterDef
LocalVariableDeclaration
ArrayAccess
Expression
ArrayCreation
PrimitiveType
Assignment
Block
Type
Statements
Statement
BodyDeclaration
ClassDeclaration
InterfaceDeclaration
MethodDeclaration
ConstructorDeclaration
Initializer
ClassInstanceCreation
ArgumentsList
CompilationUnit
OptPackage
ImportDeclaration
ImportDeclarations
OptTypeDeclaration
EmptyStatement
ConditionalExpression
FieldAccess
InfixExpression
InstanceofExpression
MethodInvocation
Name
ParenthesizedExpression
ExpressionStatement
StatementExpression
ForStatement
IfStatement
InfixOperator
Modifier
Modifiers
S
S
191
S CompilationUnit EOF
SimpleName identifier
ArrayAccess PrimaryNoNewArray [ Expression ]
ArrayAccess Name [ Expression ]
ArrayCreation new ClassOrInterfaceType [ Expression ]
ArrayCreation new PrimitiveType [ Expression ]
Assignment LeftHandSide = AssignmentExpression
Statements Statements Statement
Block { Statements }
Statements Statement
Block { }
MultiplicativeExpression MultiplicativeExpression * UnaryExpression
MultiplicativeExpression MultiplicativeExpression / UnaryExpression
MultiplicativeExpression MultiplicativeExpression % UnaryExpression
MultiplicativeExpression UnaryExpression
AdditiveExpression MultiplicativeExpression
AdditiveExpression AdditiveExpression + MultiplicativeExpression
AdditiveExpression AdditiveExpression - MultiplicativeExpression
RelationalExpression AdditiveExpression
RelationalExpression RelationalExpression < AdditiveExpression
RelationalExpression RelationalExpression > AdditiveExpression
RelationalExpression RelationalExpression <= AdditiveExpression
RelationalExpression RelationalExpression >= AdditiveExpression
RelationalExpression RelationalExpression instanceof RefType
EqualityExpression RelationalExpression
EqualityExpression EqualityExpression == RelationalExpression
EqualityExpression EqualityExpression != RelationalExpression
BitAndExpression EqualityExpression
BitAndExpression BitAndExpression & EqualityExpression
BitXorExpression BitAndExpression
BitXorExpression BitXorExpression ^ BitAndExpression
BitOrExpression BitXorExpression
BitOrExpression BitOrExpression | BitXorExpression
CondAndExpression BitOrExpression
CondAndExpression CondAndExpression && BitOrExpression
CondOrExpression CondAndExpression
CondOrExpression CondOrExpression || CondAndExpression
AssignmentExpression CondOrExpression
AssignmentExpression Assignment
LeftHandSide Name
LeftHandSide FieldAccess
LeftHandSide ArrayAccess
ClassInstanceCreation new Name ( AnyArguments )
ArgumentsList Expression
ArgumentsList ArgumentsList , Expression
CompilationUnit OptPackage AnyImport OptTypeDeclaration
OptPackage package Name ;
OptPackage
AnyImport ImportDeclarations
AnyImport
OptTypeDeclaration
ImportDeclarations ImportDeclaration
ImportDeclarations ImportDeclarations ImportDeclaration
EmptyStatement ;
Literal integerLiteral
Literal booleanLiteral
Literal characterLiteral
Literal stringLiteral
Literal null
PrimaryNoNewArray Literal
PrimaryNoNewArray this
PrimaryNoNewArray ParenthesizedExpression
PrimaryNoNewArray ClassInstanceCreation
PrimaryNoNewArray FieldAccess
PrimaryNoNewArray MethodInvocation
PrimaryNoNewArray ArrayAccess
PostFixExpression Primary
PostFixExpression Name
UnaryExpressionNotPlusMinus ! UnaryExpression
UnaryExpression - UnaryExpression
UnaryExpressionNotPlusMinus PostFixExpression
UnaryExpressionNotPlusMinus CastExpression
UnaryExpression UnaryExpressionNotPlusMinus
PrimitiveCast ( PrimitiveType ) 
PrimitiveCast ( PrimitiveType [ ] ) 
CastExpression PrimitiveCast UnaryExpression
NonPrimCast ( Expression )
NonPrimCast ( Name [ ] ) 
CastExpression NonPrimCast UnaryExpressionNotPlusMinus
Primary PrimaryNoNewArray
Primary ArrayCreation
Expression AssignmentExpression
ExpressionStatement StatementExpression ;
FieldAccess Primary . identifier
ForStatement ForHeader Statement
ForInit StatementExpression
ForInit LocalVariableDeclaration
ForInit
ForCond
ForCond Expression
ForInc
ForInc StatementExpression
ForHeader for ( ForInit ; ForCond ; ForInc ) 
IfThenStatement if ( Expression ) Statement 
IfThenElseStatement if ( Expression ) StatementNoShortIf else Statement
IfThenElseStatementNoShortIf if ( Expression ) StatementNoShortIf else StatementNoShortIf
WhileStatementNoShortIf while ( Expression ) StatementNoShortIf
ForStatementNoShortIf ForHeader StatementNoShortIf
ImportDeclaration import Name ;
ImportDeclaration import Name . * ;
Modifiers Modifier
AnyModifiers 
AnyModifiers Modifiers
Modifier final
Modifiers Modifiers Modifier
AnyParameterDefs 
AnyParameterDefs ParameterDefs
MethodDeclaration AnyModifiers Type identifier ( AnyParameterDefs ) Block
MethodDeclaration AnyModifiers void identifier ( AnyParameterDefs ) Block
MethodDeclaration AnyModifiers Type identifier ( AnyParameterDefs ) ;
MethodDeclaration AnyModifiers void identifier ( AnyParameterDefs ) ;
ConstructorDeclaration AnyModifiers identifier ( AnyParameterDefs ) Block
ParameterDefs ParameterDefs , ParameterDef
ParameterDefs ParameterDef
ParameterDef Type identifier
MethodInvocation Name . identifier ( AnyArguments )
MethodInvocation Primary . identifier ( AnyArguments )
MethodInvocation identifier ( AnyArguments )
AnyArguments 
AnyArguments ArgumentsList
Modifier public
Modifier protected
Modifier static
Modifier abstract
Modifier native
Name QualifiedName
Name SimpleName
ParenthesizedExpression ( Expression )
PrimitiveType byte
PrimitiveType boolean
PrimitiveType short
PrimitiveType char
PrimitiveType int
QualifiedName Name . identifier
ReturnStatement return ;
ReturnStatement return Expression ;
LocalVariableDeclaration Type identifier = Expression
LocalVariableDeclaration Type identifier
StatementWithoutTrailingSubstatement Block
StatementWithoutTrailingSubstatement EmptyStatement
StatementWithoutTrailingSubstatement ExpressionStatement
StatementWithoutTrailingSubstatement ReturnStatement
StatementWithoutTrailingSubstatement LocalVariableDeclaration ;
Statement StatementWithoutTrailingSubstatement
Statement IfThenStatement
Statement IfThenElseStatement
Statement WhileStatement
Statement ForStatement
StatementNoShortIf StatementWithoutTrailingSubstatement
StatementNoShortIf IfThenElseStatementNoShortIf
StatementNoShortIf WhileStatementNoShortIf
StatementNoShortIf ForStatementNoShortIf
Type PrimitiveType
Type RefType
RefType ArrayType
RefType ClassOrInterfaceType
ClassOrInterfaceType Name
ArrayType Name [ ]
ArrayType PrimitiveType [ ]
OptTypeDeclaration ClassDeclaration
OptTypeDeclaration InterfaceDeclaration
AnyClassBody
AnyClassBody ClassBodyDeclarations
OptClassParent
OptClassParent extends ClassOrInterfaceType
OptInterfaces
OptInterfaces implements Interfaces
ClassDeclaration AnyModifiers class identifier OptClassParent OptInterfaces { AnyClassBody }
Interfaces Interfaces , ClassOrInterfaceType
Interfaces ClassOrInterfaceType
ClassBodyDeclarations ClassBodyDeclarations ClassBodyDeclaration
ClassBodyDeclarations ClassBodyDeclaration
ClassBodyDeclaration ;
OptInterfaceParent
OptInterfaceParent extends Interfaces
AnyInterfaceBody
AnyInterfaceBody InterfaceBodyDeclarations
InterfaceDeclaration AnyModifiers interface identifier OptInterfaceParent { AnyInterfaceBody }
InterfaceBodyDeclarations InterfaceBodyDeclarations MethodDeclaration
InterfaceBodyDeclarations InterfaceBodyDeclarations ;
InterfaceBodyDeclarations MethodDeclaration
InterfaceBodyDeclarations ; 
ClassBodyDeclaration MethodDeclaration
ClassBodyDeclaration FieldDeclaration 
ClassBodyDeclaration ConstructorDeclaration
FieldDeclaration AnyModifiers Type identifier ;
FieldDeclaration AnyModifiers Type identifier = CondOrExpression ;
WhileStatement while ( Expression ) Statement
StatementExpression Assignment
StatementExpression MethodInvocation
StatementExpression ClassInstanceCreation
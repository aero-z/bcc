============ 26
endToken
boolean
byte
short
int
long
char
float
double
[
]
.
*
;
,
identifier
package
import
static
class
extends
implements
public
protected
private
abstract
final
enum
============59
S
Type
PrimitiveType
ReferenceType
NumericType
IntegralType
FloatingPointType
ClassOrInterfaceType
ArrayType
ClassType
InterfaceType
TypeDeclSpecifier
TypeName
PackageName
PackageOrTypeName
AmbiguousName
MethodName
CompilationUnit
PackageDeclaration
PackageDeclarations
ImportDeclarations
ImportDeclaration
TypeDeclarations
TypeDeclaration
SingleTypeImportDeclaration
TypeImportOnDemandDeclaration
SingleStaticImportDeclaration
StaticImportOnDemandDeclaration
NormalClassDeclaration
Identifier
ClassModifiers
ClassModifier
Interfaces
Super
TypeParameters
ClassBody
TypeArguments
InterfaceTypeList
ClassBodyDeclaration
ClassBodyDeclarations
ClassMemberDeclaration
StaticInitializer
ConstructorDeclaration
FieldDeclaration
MethodDeclaration
ClassDeclaration
InterfaceDeclaration
FieldModifiers
VariableDeclarators
VariableDeclarator
VariableDeclaratorId
VariableInitializer
Expression
ArrayInitializer
MethodHeader
MethodBody
ExpressionName
Annotations
EnumDeclaration
MethodDeclarator
FormalParameterList
FormalParameters
FormalParameter
MethodModifiers
MethodModifier
Result
VariableModifier
VariableModifiers
Block
ConstructorModifiers
ConstructorModifier
ConstructorDeclarator
ConstructorBody
TypeParameters
SimpleTypeName
ExplicitConstructorInvocation
BlockStatements
============
S
============128
Type PrimitiveType
Type ReferenceType
PrimitiveType NumericType
PrimitiveType boolean
NumericType IntegralType
NumericType FloatingPointType
IntegralType byte
IntegralType short
IntegralType int
IntegralType long
IntegralType char
FloatingPointType float
FloatingPointType double
ReferenceType ClassOrInterfaceType
ReferenceType ArrayType
ClassOrInterfaceType ClassType
ClassOrInterfaceType InterfaceType
ClassType TypeDeclSpecifier
InterfaceType TypeDeclSpecifier
TypeDeclSpecifier TypeName
TypeName identifier
ArrayType Type [ ]
PackageName identifier
PackageName PackageName . identifier
TypeName PackageOrTypeName . identifier
ExpressionName identifier
ExpressionName AmbiguousName . identifier
MethodName identifier
MethodName AmbiguousName . identifier
PackageOrTypeName identifier
PackageOrTypeName PackageOrTypeName . identifier
AmbiguousName identifier
AmbiguousName AmbiguousName . identifier
S CompilationUnit endToken
CompilationUnit PackageDeclarations ImportDeclarations TypeDeclarations
CompilationUnit PackageDeclaration ImportDeclarations
CompilationUnit PackageDeclaration TypeDeclarations
CompilationUnit ImportDeclarations TypeDeclarations
CompilationUnit PackageDeclaration
CompilationUnit ImportDeclarations
CompilationUnit TypeDeclarations
ImportDeclarations ImportDeclaration
ImportDeclarations ImportDeclarations ImportDeclaration
TypeDeclarations TypeDeclaration
TypeDeclarations TypeDeclarations TypeDeclaration
PackageDeclaration Annotations package PackageName ;
PackageDeclaration package PackageName ;
ImportDeclaration SingleTypeImportDeclaration
ImportDeclaration TypeImportOnDemandDeclaration
ImportDeclaration SingleStaticImportDeclaration
ImportDeclaration StaticImportOnDemandDeclaration
SingleTypeImportDeclaration import TypeName ;
TypeImportOnDemandDeclaration import PackageOrTypeName . * ;
SingleStaticImportDeclaration import static TypeName . Identifier ;
StaticImportOnDemandDeclaration import static TypeName . * ;
TypeDeclaration ClassDeclaration
TypeDeclaration InterfaceDeclaration
TypeDeclaration ;
ClassDeclaration NormalClassDeclaration
ClassDeclaration EnumDeclaration
NormalClassDeclaration ClassModifiers class Identifier TypeParameters Super Interfaces ClassBody
NormalClassDeclaration class Identifier ClassBody
NormalClassDeclaration class Identifier Interfaces ClassBody
NormalClassDeclaration class Identifier Super ClassBody
NormalClassDeclaration class Identifier Super Interfaces ClassBody
NormalClassDeclaration class Identifier TypeParameters ClassBody
NormalClassDeclaration class Identifier TypeParameters Interfaces ClassBody
NormalClassDeclaration class Identifier TypeParameters Super ClassBody
NormalClassDeclaration class Identifier TypeParameters Super Interfaces ClassBody
NormalClassDeclaration ClassModifiers class Identifier ClassBody
NormalClassDeclaration ClassModifiers class Identifier Interfaces ClassBody
NormalClassDeclaration ClassModifiers class Identifier Super ClassBody
NormalClassDeclaration ClassModifiers class Identifier Super Interfaces ClassBody
NormalClassDeclaration ClassModifiers class Identifier TypeParameters ClassBody
NormalClassDeclaration ClassModifiers class Identifier TypeParameters Interfaces ClassBody
NormalClassDeclaration ClassModifiers class Identifier TypeParameters Super ClassBody
ClassModifiers ClassModifier
ClassModifiers ClassModifiers ClassModifier
ClassModifier public
ClassModifier protected
ClassModifier private
ClassModifier abstract
ClassModifier static
ClassModifier final
Super extends ClassType
ClassType TypeDeclSpecifier TypeArguments
ClassType TypeDeclSpecifier
Interfaces implements InterfaceTypeList
InterfaceTypeList InterfaceType
InterfaceTypeList InterfaceTypeList , InterfaceType
ClassBody { ClassBodyDeclarations }
ClassBody { }
ClassBodyDeclarations ClassBodyDeclaration
ClassBodyDeclarations ClassBodyDeclarations ClassBodyDeclaration
ClassBodyDeclaration ClassMemberDeclaration
ClassBodyDeclaration StaticInitializer
ClassBodyDeclaration ConstructorDeclaration
ClassMemberDeclaration FieldDeclaration
ClassMemberDeclaration MethodDeclaration
ClassMemberDeclaration ClassDeclaration
ClassMemberDeclaration InterfaceDeclaration
ClassMemberDeclaration ;
FieldDeclaration FieldModifiers Type VariableDeclarators ;
FieldDeclaration Type VariableDeclarators ;
VariableDeclarators VariableDeclarator
VariableDeclarators VariableDeclarators , VariableDeclarator
VariableDeclarator VariableDeclaratorId
VariableDeclarator VariableDeclaratorId = VariableInitializer
VariableDeclaratorId Identifier
VariableDeclaratorId VariableDeclaratorId [ ]
VariableInitializer Expression
VariableInitializer ArrayInitializer
FieldModifiers FieldModifier
FieldModifiers FieldModifiers FieldModifier
FieldModifier public
FieldModifier protected
FieldModifier private
FieldModifier static
FieldModifier final
MethodDeclaration MethodHeader MethodBody
MethodHeader MethodModifiers TypeParameters Result MethodDeclarator
MethodHeader TypeParameters Result MethodDeclarator
MethodHeader MethodModifiers Result MethodDeclarator
MethodHeader Result MethodDeclarator
MethodDeclarator Identifier ( FormalParameterList )
MethodDeclarator Identifier ( )
MethodDeclarator MethodDeclarator [ ]
// FormalParameterList LastFormalParameter
// FormalParameterList FormalParameters , LastFormalParameter
FormalParameters FormalParameter
FormalParameters FormalParameters , FormalParameter
FormalParameter VariableModifiers Type VariableDeclaratorId
FormalParameter Type VariableDeclaratorId
VariableModifiers VariableModifier
VariableModifiers VariableModifiers VariableModifier
VariableModifier final
//page247  LastFormalParameter VariableModifiers Type... VariableDeclaratorId
// LastFormalParameter VariableModifiers Type... VariableDeclaratorId
//? LastFormalParameter FormalParameter
MethodModifiers MethodModifier
MethodModifiers MethodModifiers MethodModifier
MethodModifier public
MethodModifier protected
MethodModifier private
MethodModifier abstract
MethodModifier static
MethodModifier final
Result Type
Result void
MethodBody Block
MethodBody ;
ConstructorDeclaration ConstructorModifiers ConstructorDeclarator ConstructorBody
ConstructorDeclaration ConstructorDeclarator ConstructorBody
ConstructorDeclarator TypeParameters SimpleTypeName ( FormalParameterList )
ConstructorDeclarator SimpleTypeName ( FormalParameterList )
ConstructorDeclarator TypeParameters SimpleTypeName ( )
ConstructorDeclarator SimpleTypeName ( )
ConstructorModifiers ConstructorModifier
ConstructorModifiers ConstructorModifiers ConstructorModifier
ConstructorModifier public
ConstructorModifier protected
ConstructorModifier private
ConstructorBody { ExplicitConstructorInvocation BlockStatements }
ConstructorBody { BlockStatements }
ConstructorBody { ExplicitConstructorInvocation }
ConstructorBody { }
ExplicitConstructorInvocation this ( ArgumentList ) ;
ExplicitConstructorInvocation this ( ) ;
ExplicitConstructorInvocation super ( ArgumentList ) ;
ExplicitConstructorInvocation super ( ) ;
ExplicitConstructorInvocation Primary . super ( ArgumentList ) ;
ExplicitConstructorInvocation Primary . super ( ) ;
EnumDeclaration ClassModifiers enum Identifier Interfaces EnumBody
EnumDeclaration enum Identifier Interfaces EnumBody
EnumDeclaration ClassModifiers enum Identifier EnumBody
EnumDeclaration enum Identifier EnumBody
EnumBody { EnumConstants , EnumBodyDeclarations }
EnumBody { EnumBodyDeclarations }
EnumBody { EnumConstants }
EnumBody { }
EnumConstants EnumConstant
EnumConstants EnumConstants , EnumConstant
EnumConstant Identifier Arguments ClassBody
EnumConstant Identifier ClassBody
EnumConstant Identifier Arguments
EnumConstant Identifier
Arguments ( ArgumentList )
Arguments ( )
EnumBodyDeclarations ; ClassBodyDeclarations
EnumBodyDeclarations ;
InterfaceDeclaration NormalInterfaceDeclaration
InterfaceDeclaration AnnotationTypeDeclaration
NormalInterfaceDeclaration InterfaceModifiers interface Identifier
NormalInterfaceDeclaration interface Identifier
NormalInterfaceDeclaration TypeParameters ExtendsInterfaces InterfaceBody
NormalInterfaceDeclaration ExtendsInterfaces InterfaceBody
NormalInterfaceDeclaration TypeParameters InterfaceBody
NormalInterfaceDeclaration InterfaceBody
InterfaceModifiers InterfaceModifier
InterfaceModifiers InterfaceModifiers InterfaceModifier
InterfaceModifier public
InterfaceModifier protected
InterfaceModifier private
InterfaceModifier abstract
InterfaceModifier static
InterfaceTypeList InterfaceType
InterfaceTypeList InterfaceTypeList , InterfaceType
InterfaceType TypeDeclSpecifier TypeArguments
InterfaceType TypeDeclSpecifier
InterfaceBody { InterfaceMemberDeclarations }
InterfaceBody { }
InterfaceMemberDeclarations InterfaceMemberDeclaration
InterfaceMemberDeclarations InterfaceMemberDeclarations InterfaceMemberDeclaration
InterfaceMemberDeclaration ConstantDeclaration
InterfaceMemberDeclaration AbstractMethodDeclaration
InterfaceMemberDeclaration ClassDeclaration
InterfaceMemberDeclaration InterfaceDeclaration
InterfaceMemberDeclaration ;
ConstantDeclaration ConstantModifiers Type VariableDeclarators ;
ConstantDeclaration Type VariableDeclarators ;
ConstantModifiers ConstantModifier
ConstantModifiers ConstantModifier ConstantModifers
ConstantModifier public
// ConstantModifier static
// ConstantModifier final
AbstractMethodDeclaration AbstractMethodModifiers TypeParameters Result MethodDeclarator ;
AbstractMethodDeclaration TypeParameters Result MethodDeclarator ;
AbstractMethodDeclaration AbstractMethodModifiers Result MethodDeclarator ;
AbstractMethodDeclaration Result MethodDeclarator ;
AbstractMethodModifiers AbstractMethodModifier
AbstractMethodModifiers AbstractMethodModifiers AbstractMethodModifier
AbstractMethodModifier public
AbstractMethodModifier abstract
Block { BlockStatements }
Block { }
BlockStatements BlockStatement
BlockStatements BlockStatements BlockStatement
BlockStatement LocalVariableDeclarationStatement
BlockStatement ClassDeclaration
BlockStatement Statement
LocalVariableDeclarationStatement LocalVariableDeclaration ;
LocalVariableDeclaration VariableModifiers Type VariableDeclarators
LocalVariableDeclaration Type VariableDeclarators
Statement StatementWithoutTrailingSubstatement
--not!Statement LabeledStatement
Statement IfThenStatement
Statement IfThenElseStatement
Statement WhileStatement
Statement ForStatement
StatementWithoutTrailingSubstatement Block
StatementWithoutTrailingSubstatement EmptyStatement
StatementWithoutTrailingSubstatement ExpressionStatement
StatementWithoutTrailingSubstatement AssertStatement
--not! StatementWithoutTrailingSubstatement SwitchStatement
--not! StatementWithoutTrailingSubstatement DoStatement
--not! StatementWithoutTrailingSubstatement BreakStatement
--not! StatementWithoutTrailingSubstatement ContinueStatement
StatementWithoutTrailingSubstatement ReturnStatement
--not!StatementWithoutTrailingSubstatement ThrowStatement
--not!StatementWithoutTrailingSubstatement TryStatement
StatementNoShortIf StatementWithoutTrailingSubstatement
--not!StatementNoShortIf LabeledStatementNoShortIf
StatementNoShortIf IfThenElseStatementNoShortIf
StatementNoShortIf WhileStatementNoShortIf
StatementNoShortIf ForStatementNoShortIf
IfThenStatement if ( Expression ) Statement
IfThenElseStatement if ( Expression ) StatementNoShortIf else Statement
IfThenElseStatementNoShortIf if ( Expression ) StatementNoShortIf else StatementNoShortIf
EmptyStatement ;
ExpressionStatement StatementExpression ;
StatementExpression Assignment
???? StatementExpression PreIncrementExpression
StatementExpression PreDecrementExpression
StatementExpression PostIncrementExpression
StatementExpression PostDecrementExpression
StatementExpression MethodInvocation
StatementExpression ClassInstanceCreationExpression
while ( Expression ) Statement
while ( Expression ) StatementNoShortIf
BasicForStatement for ( ForInit ; Expression ; ForUpdate ) Statement
BasicForStatement for (  ; Expression ; ForUpdate ) Statement
BasicForStatement for ( ForInit ;  ; ForUpdate ) Statement
BasicForStatement for ( ForInit ; Expression ;  ) Statement
BasicForStatement for ( ; ; ForUpdate ) Statement
BasicForStatement for ( ForInit ; ; ) Statement
BasicForStatement for ( ; Expression ; ) Statement
BasicForStatement for ( ; ; ) Statement
ForStatementNoShortIf for ( ForInit ; Expression ; ForUpdate ) StatementNoShortIf
ForStatementNoShortIf for (  ; Expression ; ForUpdate ) StatementNoShortIf
ForStatementNoShortIf for ( ForInit ;  ; ForUpdate ) StatementNoShortIf
ForStatementNoShortIf for ( ForInit ; Expression ;  ) StatementNoShortIf
ForStatementNoShortIf for ( ; ; ForUpdate ) StatementNoShortIf
ForStatementNoShortIf for ( ForInit ; ; ) StatementNoShortIf
ForStatementNoShortIf for ( ; Expression ; ) StatementNoShortIf
ForStatementNoShortIf for ( ; ; ) StatementNoShortIf
ReturnStatement return Expression ;
ReturnStatement return ;
Primary PrimaryNoNewArray
Primary ArrayCreationExpression
PrimaryNoNewArray Literal
PrimaryNoNewArray Type . class
PrimaryNoNewArray void . class
PrimaryNoNewArray this
PrimaryNoNewArray ClassName . this
PrimaryNoNewArray ( Expression )
PrimaryNoNewArray ClassInstanceCreationExpression
PrimaryNoNewArray FieldAccess
PrimaryNoNewArrayMethodInvocation
PrimaryNoNewArray ArrayAccess
Literal IntegerLiteral
Literal FloatingPointLiteral
Literal BooleanLiteral
Literal CharacterLiteral
Literal StringLiteral
Literal NullLiteral
ClassInstanceCreationExpression new TypeDeclSpecifier ( ArgumentList ) ClassBody
ClassInstanceCreationExpression new TypeDeclSpecifier ( ) ClassBody
ClassInstanceCreationExpression new TypeDeclSpecifier ( ArgumentList )
ClassInstanceCreationExpression new TypeDeclSpecifier ( )
ClassInstanceCreationExpression Primary . new Identifier ( ArgumentList ) ClassBody
ClassInstanceCreationExpression Primary . new Identifier ( ) ClassBody
ClassInstanceCreationExpression Primary . new Identifier ( ArgumentList )
ClassInstanceCreationExpression Primary . new Identifier ( )
ArgumentList ArgumentList , Expression
ArgumentList Expression
57
!
while
interface
implements
extends
class
int
char
short
byte
,
EOF
if
package
else
import
(
)
true
false
[
]
new
=
{
}
;
characterLiteral
integerLiteral
null
stringLiteral
for
*
.
/
%
+
-
<
>
==
!=
&&
||
<=
>=
instanceof
void
identifier
public
protected
private
static
abstract
final
native
return
77
PostFixExpression
UnaryExpression
StatementWithoutTrailingSubstatement
WhileStatementNoShortIf
ForStatementNoShortIf
IfThenElseStatementNoShortIf
StatementNoShortIf
IfThenElseStatement
IfThenStatement
ForHeader
Literal
AssignmentExpression
EqualityExpression
RelationalExpression
PrimaryNoNewArray
Primary
CondOrExpression
CondAndExpression
MultiplicativeExpression
AdditiveExpression
LeftHandSide
InterfaceBodyDeclaration
InterfaceBodyDeclarations
ClassBodyDeclaration
ClassBodyDeclarations
Interfaces
WhileStatement
ReturnStatement
QualifiedName
SimpleName
ParameterDefs
Parameters
Parameter
ParameterDef
SingleVariableDeclaration
BooleanLiteral
ArrayAccess
Expression
ArrayCreation
PrimitiveType
Assignment
Block
Type
Statements
Statement
BodyDeclaration
ClassDeclaration
InterfaceDeclaration
MethodDeclaration
ConstructorDeclaration
FieldDeclaration
Initializer
CastExpression
ClassInstanceCreation
ArgumentsList
CompilationUnit
PackageDeclaration
ImportDeclaration
ImportDeclarations
TypeDeclaration
TypeDeclarations
EmptyStatement
ConditionalExpression
FieldAccess
InfixExpression
InstanceofExpression
MethodInvocation
Name
ParenthesizedExpression
ExpressionStatement
StatementExpression
ForStatement
IfStatement
InfixOperator
Modifier
Modifiers
S
S
199
S CompilationUnit EOF
SimpleName identifier
ArrayAccess PrimaryNoNewArray [ Expression ]
ArrayAccess Name [ Expression ]
ArrayCreation new Type [ Expression ]
Assignment LeftHandSide = AssignmentExpression
Statements Statements Statement
Block { Statements }
Statements Statement
Block { }
BooleanLiteral true
BooleanLiteral false
CastExpression ( Type ) UnaryExpression
MultiplicativeExpression MultiplicativeExpression * UnaryExpression
MultiplicativeExpression MultiplicativeExpression / UnaryExpression
MultiplicativeExpression MultiplicativeExpression % UnaryExpression
MultiplicativeExpression UnaryExpression
AdditiveExpression MultiplicativeExpression
AdditiveExpression AdditiveExpression + MultiplicativeExpression
AdditiveExpression AdditiveExpression - MultiplicativeExpression
RelationalExpression AdditiveExpression
RelationalExpression RelationalExpression < AdditiveExpression
RelationalExpression RelationalExpression > AdditiveExpression
RelationalExpression RelationalExpression <= AdditiveExpression
RelationalExpression RelationalExpression >= AdditiveExpression
RelationalExpression RelationalExpression instanceof Type
EqualityExpression RelationalExpression
EqualityExpression EqualityExpression == RelationalExpression
EqualityExpression EqualityExpression != RelationalExpression
CondAndExpression EqualityExpression
CondAndExpression CondAndExpression && EqualityExpression
CondOrExpression CondAndExpression
CondOrExpression CondOrExpression || CondAndExpression
AssignmentExpression CondOrExpression
AssignmentExpression Assignment
LeftHandSide Name
LeftHandSide FieldAccess
LeftHandSide ArrayAccess
ClassInstanceCreation new Name ( ArgumentsList )
ClassInstanceCreation new Name ( )
ArgumentsList Expression
ArgumentsList ArgumentsList , Expression
CompilationUnit PackageDeclaration ImportDeclarations TypeDeclarations
CompilationUnit PackageDeclaration ImportDeclarations
CompilationUnit PackageDeclaration TypeDeclarations
CompilationUnit ImportDeclarations TypeDeclarations
CompilationUnit PackageDeclaration
CompilationUnit ImportDeclarations
CompilationUnit TypeDeclarations
ImportDeclarations ImportDeclaration
ImportDeclarations ImportDeclarations ImportDeclaration
TypeDeclarations TypeDeclaration
TypeDeclarations ;
TypeDeclarations TypeDeclarations TypeDeclaration
TypeDeclarations TypeDeclarations ;
EmptyStatement ;
Literal integerLiteral
Literal BooleanLiteral
Literal characterLiteral
Literal stringLiteral
Literal null
PrimaryNoNewArray Literal
PrimaryNoNewArray ParenthesizedExpression
PrimaryNoNewArray ClassInstanceCreation
PrimaryNoNewArray FieldAccess
PrimaryNoNewArray MethodInvocation
PrimaryNoNewArray ArrayAccess
PostFixExpression Primary
PostFixExpression Name
UnaryExpression ! UnaryExpression
UnaryExpression PostFixExpression
UnaryExpression CastExpression
Primary PrimaryNoNewArray
Primary ArrayCreation
Expression AssignmentExpression
ExpressionStatement StatementExpression ;
FieldAccess Primary . identifier
ForStatement ForHeader Statement
ForHeader for ( ; ; )
ForHeader for ( Expression ; ; )
ForHeader for ( Expression ; Expression ; )
ForHeader for ( Expression ; Expression ; Expression )
ForHeader for ( Expression ; ; Expression )
ForHeader for ( ; Expression ; Expression )
ForHeader for ( ; Expression ; )
ForHeader for ( ; ; Expression )
IfThenStatement if ( Expression ) Statement
IfThenElseStatement if ( Expression ) StatementNoShortIf else Statement
IfThenElseStatementNoShortIf if ( Expression ) StatementNoShortIf else StatementNoShortIf
WhileStatementNoShortIf while ( Expression ) StatementNoShortIf
ForStatementNoShortIf ForHeader StatementNoShortIf
ImportDeclaration import Name ;
ImportDeclaration import Name . * ;
Modifiers Modifier
Modifiers Modifiers Modifier
MethodDeclaration Modifiers Type identifier ( ParameterDefs ) Block
MethodDeclaration Type identifier ( ParameterDefs ) Block
MethodDeclaration Modifiers Type identifier ( ParameterDefs ) ;
MethodDeclaration Type identifier ( ParameterDefs ) ;
MethodDeclaration Modifiers Type identifier ( ) Block
MethodDeclaration Type identifier ( ) Block
MethodDeclaration Modifiers Type identifier ( ) ;
MethodDeclaration Type identifier ( ) ;
ConstructorDeclaration Modifiers identifier ( ParameterDefs ) Block
ConstructorDeclaration Modifiers identifier ( ) Block
ConstructorDeclaration identifier ( ParameterDefs ) Block
ConstructorDeclaration identifier ( ) Block
ParameterDefs ParameterDefs , ParameterDef
ParameterDefs ParameterDef
ParameterDef Type identifier
ParameterDef final Type identifier
MethodInvocation Name ( )
MethodInvocation Name ( ArgumentsList )
MethodInvocation Primary . Name ( )
MethodInvocation Primary . Name ( ArgumentsList )
Modifier public
Modifier protected
Modifier private
Modifier static
Modifier abstract
Modifier final
Modifier native
Name QualifiedName
Name SimpleName
PackageDeclaration package Name ;
ParenthesizedExpression ( Expression )
PrimitiveType byte
PrimitiveType short
PrimitiveType char
PrimitiveType int
PrimitiveType void
QualifiedName Name . SimpleName
ReturnStatement return ;
ReturnStatement return Expression ;
SingleVariableDeclaration Modifiers Type identifier = Expression
SingleVariableDeclaration Type identifier = Expression
SingleVariableDeclaration Modifiers Type identifier
SingleVariableDeclaration Type identifier
StatementWithoutTrailingSubstatement Block
StatementWithoutTrailingSubstatement EmptyStatement
StatementWithoutTrailingSubstatement ExpressionStatement
StatementWithoutTrailingSubstatement ReturnStatement
StatementWithoutTrailingSubstatement SingleVariableDeclaration ;
Statement StatementWithoutTrailingSubstatement
Statement IfThenStatement
Statement IfThenElseStatement
Statement WhileStatement
Statement ForStatement
StatementNoShortIf StatementWithoutTrailingSubstatement
StatementNoShortIf IfThenElseStatementNoShortIf
StatementNoShortIf WhileStatementNoShortIf
StatementNoShortIf ForStatementNoShortIf
Type PrimitiveType
Type Name
TypeDeclaration ClassDeclaration
TypeDeclaration InterfaceDeclaration
ClassDeclaration Modifiers class identifier extends Type implements Interfaces { ClassBodyDeclarations }
ClassDeclaration Modifiers class identifier implements Interfaces { ClassBodyDeclarations }
ClassDeclaration Modifiers class identifier extends Type { ClassBodyDeclarations }
ClassDeclaration Modifiers class identifier { ClassBodyDeclarations }
ClassDeclaration class identifier extends Type implements Interfaces { ClassBodyDeclarations }
ClassDeclaration class Type implements Interfaces { ClassBodyDeclarations }
ClassDeclaration class identifier extends Type { ClassBodyDeclarations }
ClassDeclaration class identifier { ClassBodyDeclarations }
ClassDeclaration Modifiers class identifier extends Type implements Interfaces { }
ClassDeclaration Modifiers class identifier implements Interfaces { }
ClassDeclaration Modifiers class identifier extends Type { }
ClassDeclaration Modifiers class identifier { }
ClassDeclaration class identifier extends Type implements Interfaces { }
ClassDeclaration class Type implements Interfaces { }
ClassDeclaration class identifier extends Type { }
ClassDeclaration class identifier { }
Interfaces Interfaces , Type
Interfaces Type
ClassBodyDeclarations ClassBodyDeclarations ClassBodyDeclaration
ClassBodyDeclarations ClassBodyDeclarations ;
ClassBodyDeclarations ClassBodyDeclaration
ClassBodyDeclarations ;
InterfaceDeclaration Modifiers interface identifier extends Interfaces { InterfaceBodyDeclarations }
InterfaceDeclaration Modifiers interface identifier { InterfaceBodyDeclarations }
InterfaceDeclaration interface identifier extends Interfaces { InterfaceBodyDeclarations }
InterfaceDeclaration interface identifier { InterfaceBodyDeclarations }
InterfaceDeclaration Modifiers interface identifier extends Interfaces { }
InterfaceDeclaration Modifiers interface identifier { }
InterfaceDeclaration interface identifier extends Interfaces { }
InterfaceDeclaration interface identifier { }
InterfaceBodyDeclarations InterfaceBodyDeclarations InterfaceBodyDeclaration
InterfaceBodyDeclarations InterfaceBodyDeclarations ;
InterfaceBodyDeclarations InterfaceBodyDeclaration
InterfaceBodyDeclarations ;
ClassBodyDeclaration MethodDeclaration
ClassBodyDeclaration SingleVariableDeclaration ;
ClassBodyDeclaration ConstructorDeclaration
InterfaceBodyDeclaration MethodDeclaration
InterfaceBodyDeclaration SingleVariableDeclaration ;
WhileStatement while ( Expression ) Statement
StatementExpression Assignment
StatementExpression MethodInvocation
StatementExpression ClassInstanceCreation
